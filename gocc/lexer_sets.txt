Item sets:
S0{
	!ws : ' ' | '\t' | '\n' | • '\r'
	!ws : ' ' | '\t' | • '\n' | '\r'
	!ws : ' ' | • '\t' | '\n' | '\r'
	!ws : • ' ' | '\t' | '\n' | '\r'
	operations : '+' | '-' | '*' | '/' | • '%'
	operations : '+' | '-' | '*' | • '/' | '%'
	operations : '+' | '-' | • '*' | '/' | '%'
	operations : '+' | • '-' | '*' | '/' | '%'
	operations : • '+' | '-' | '*' | '/' | '%'
	relop : '<' | '>' | • '!'
	relop : '<' | • '>' | '!'
	relop : • '<' | '>' | '!'
	number : ['-'] (_integer | • _float)
	number : ['-'] (• _integer | _float)
	number : [• '-'] (_integer | _float)
	charac : • ''' (_alpha | _digit | ' ') '''
	string : • _string
	boolean : _true | • _false
	boolean : • _true | _false
	id : • _id
	func : • 'f' 'u' 'n' 'c'
	:: : • ':' ':'
	=> : • '=' '>'
	( : • '('
	) : • ')'
	, : • ','
	[ : • '['
	] : • ']'
	num : • 'n' 'u' 'm'
	bool : • 'b' 'o' 'o' 'l'
	char : • 'c' 'h' 'a' 'r'
	# : • '#'
	_float : • _digit {_digit} '.' _digit {_digit}
	_integer : • _digit {_digit}
	_string : • '"' {(_digit | _alpha | ' ')} '"'
	_false : • 'f' 'a' 'l' 's' 'e'
	_true : • 't' 'r' 'u' 'e'
	_id : • _alpha {(_digit | _alpha)}
	_digit : •  '0'-'9'
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
}
Transitions:
	['\t','\t'] -> S1
	['\n','\n'] -> S1
	['\r','\r'] -> S1
	[' ',' '] -> S1
	['!','!'] -> S2
	['"','"'] -> S3
	['#','#'] -> S4
	['%','%'] -> S5
	[''','''] -> S6
	['(','('] -> S7
	[')',')'] -> S8
	['*','*'] -> S5
	['+','+'] -> S5
	[',',','] -> S9
	['-','-'] -> S10
	['/','/'] -> S5
	['0','9'] -> S11
	[':',':'] -> S12
	['<','<'] -> S2
	['=','='] -> S13
	['>','>'] -> S2
	['A','Z'] -> S14
	['[','['] -> S15
	[']',']'] -> S16
	['a','a'] -> S14
	['b','b'] -> S17
	['c','c'] -> S18
	['d','e'] -> S14
	['f','f'] -> S19
	['g','m'] -> S14
	['n','n'] -> S20
	['o','s'] -> S14
	['t','t'] -> S21
	['u','z'] -> S14
Action: nil
Symbols classes: {['\t','\t'], ['\n','\n'], ['\r','\r'], [' ',' '], ['!','!'], ['"','"'], ['#','#'], ['%','%'], [''','''], ['(','('], [')',')'], ['*','*'], ['+','+'], [',',','], ['-','-'], ['/','/'], ['0','9'], [':',':'], ['<','<'], ['=','='], ['>','>'], ['A','Z'], ['[','['], [']',']'], ['a','a'], ['b','b'], ['c','c'], ['d','e'], ['f','f'], ['g','m'], ['n','n'], ['o','s'], ['t','t'], ['u','z']}

S1{
	!ws : (' ' | '\t' | '\n' | '\r') •
}
Transitions:
Action: Ignore("!ws")
Symbols classes: {}

S2{
	relop : ('<' | '>' | '!') •
}
Transitions:
Action: Accept("relop")
Symbols classes: {}

S3{
	_string : '"' {(_digit | _alpha | ' ')} • '"'
	_string : '"' {(_digit | _alpha | • ' ')} '"'
	_string : '"' {(_digit | • _alpha | ' ')} '"'
	_string : '"' {(• _digit | _alpha | ' ')} '"'
	string : • _string
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	[' ',' '] -> S3
	['"','"'] -> S22
	['0','9'] -> S23
	['A','Z'] -> S24
	['a','z'] -> S24
Action: nil
Symbols classes: {[' ',' '], ['"','"'], ['0','9'], ['A','Z'], ['a','z']}

S4{
	# : '#' •
}
Transitions:
Action: Accept("#")
Symbols classes: {}

S5{
	operations : ('+' | '-' | '*' | '/' | '%') •
}
Transitions:
Action: Accept("operations")
Symbols classes: {}

S6{
	charac : ''' (_alpha | _digit | • ' ') '''
	charac : ''' (_alpha | • _digit | ' ') '''
	charac : ''' (• _alpha | _digit | ' ') '''
	_digit : •  '0'-'9'
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
}
Transitions:
	[' ',' '] -> S25
	['0','9'] -> S26
	['A','Z'] -> S27
	['a','z'] -> S27
Action: nil
Symbols classes: {[' ',' '], ['0','9'], ['A','Z'], ['a','z']}

S7{
	( : '(' •
}
Transitions:
Action: Accept("(")
Symbols classes: {}

S8{
	) : ')' •
}
Transitions:
Action: Accept(")")
Symbols classes: {}

S9{
	, : ',' •
}
Transitions:
Action: Accept(",")
Symbols classes: {}

S10{
	operations : ('+' | '-' | '*' | '/' | '%') •
	number : ['-'] (_integer | • _float)
	number : ['-'] (• _integer | _float)
	_float : • _digit {_digit} '.' _digit {_digit}
	_integer : • _digit {_digit}
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S11
Action: Accept("operations")
Symbols classes: {['0','9']}

S11{
	_digit :  '0'-'9' •
	_float : _digit {_digit} • '.' _digit {_digit}
	_float : _digit {• _digit} '.' _digit {_digit}
	_integer : _digit {_digit} •
	_integer : _digit {• _digit}
	number : ['-'] (_integer | • _float)
	number : ['-'] (_integer | _float) •
	number : ['-'] (• _integer | _float)
	_digit : •  '0'-'9'
}
Transitions:
	['.','.'] -> S28
	['0','9'] -> S11
Action: Accept("number")
Symbols classes: {['.','.'], ['0','9']}

S12{
	:: : ':' • ':'
}
Transitions:
	[':',':'] -> S29
Action: nil
Symbols classes: {[':',':']}

S13{
	=> : '=' • '>'
}
Transitions:
	['>','>'] -> S30
Action: nil
Symbols classes: {['>','>']}

S14{
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S15{
	[ : '[' •
}
Transitions:
Action: Accept("[")
Symbols classes: {}

S16{
	] : ']' •
}
Transitions:
Action: Accept("]")
Symbols classes: {}

S17{
	bool : 'b' • 'o' 'o' 'l'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','n'] -> S14
	['o','o'] -> S32
	['p','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','n'], ['o','o'], ['p','z']}

S18{
	char : 'c' • 'h' 'a' 'r'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','g'] -> S14
	['h','h'] -> S33
	['i','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','g'], ['h','h'], ['i','z']}

S19{
	func : 'f' • 'u' 'n' 'c'
	_false : 'f' • 'a' 'l' 's' 'e'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : _true | • _false
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','a'] -> S34
	['b','t'] -> S14
	['u','u'] -> S35
	['v','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','a'], ['b','t'], ['u','u'], ['v','z']}

S20{
	num : 'n' • 'u' 'm'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','t'] -> S14
	['u','u'] -> S36
	['v','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','t'], ['u','u'], ['v','z']}

S21{
	_true : 't' • 'r' 'u' 'e'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : • _true | _false
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','q'] -> S14
	['r','r'] -> S37
	['s','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','q'], ['r','r'], ['s','z']}

S22{
	_string : '"' {(_digit | _alpha | ' ')} '"' •
	string : _string •
}
Transitions:
Action: Accept("string")
Symbols classes: {}

S23{
	_digit :  '0'-'9' •
	_string : '"' {(_digit | _alpha | ' ')} • '"'
	_string : '"' {(_digit | _alpha | • ' ')} '"'
	_string : '"' {(_digit | • _alpha | ' ')} '"'
	_string : '"' {(• _digit | _alpha | ' ')} '"'
	string : • _string
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	[' ',' '] -> S3
	['"','"'] -> S22
	['0','9'] -> S23
	['A','Z'] -> S24
	['a','z'] -> S24
Action: nil
Symbols classes: {[' ',' '], ['"','"'], ['0','9'], ['A','Z'], ['a','z']}

S24{
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_string : '"' {(_digit | _alpha | ' ')} • '"'
	_string : '"' {(_digit | _alpha | • ' ')} '"'
	_string : '"' {(_digit | • _alpha | ' ')} '"'
	_string : '"' {(• _digit | _alpha | ' ')} '"'
	string : • _string
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	[' ',' '] -> S3
	['"','"'] -> S22
	['0','9'] -> S23
	['A','Z'] -> S24
	['a','z'] -> S24
Action: nil
Symbols classes: {[' ',' '], ['"','"'], ['0','9'], ['A','Z'], ['a','z']}

S25{
	charac : ''' (_alpha | _digit | ' ') • '''
}
Transitions:
	[''','''] -> S38
Action: nil
Symbols classes: {[''',''']}

S26{
	_digit :  '0'-'9' •
	charac : ''' (_alpha | _digit | ' ') • '''
}
Transitions:
	[''','''] -> S38
Action: nil
Symbols classes: {[''',''']}

S27{
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	charac : ''' (_alpha | _digit | ' ') • '''
}
Transitions:
	[''','''] -> S38
Action: nil
Symbols classes: {[''',''']}

S28{
	_float : _digit {_digit} '.' • _digit {_digit}
	number : ['-'] (_integer | • _float)
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S39
Action: nil
Symbols classes: {['0','9']}

S29{
	:: : ':' ':' •
}
Transitions:
Action: Accept("::")
Symbols classes: {}

S30{
	=> : '=' '>' •
}
Transitions:
Action: Accept("=>")
Symbols classes: {}

S31{
	_digit :  '0'-'9' •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S32{
	bool : 'b' 'o' • 'o' 'l'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','n'] -> S14
	['o','o'] -> S40
	['p','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','n'], ['o','o'], ['p','z']}

S33{
	char : 'c' 'h' • 'a' 'r'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','a'] -> S41
	['b','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','a'], ['b','z']}

S34{
	_false : 'f' 'a' • 'l' 's' 'e'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : _true | • _false
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','k'] -> S14
	['l','l'] -> S42
	['m','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','k'], ['l','l'], ['m','z']}

S35{
	func : 'f' 'u' • 'n' 'c'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','m'] -> S14
	['n','n'] -> S43
	['o','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','m'], ['n','n'], ['o','z']}

S36{
	num : 'n' 'u' • 'm'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','l'] -> S14
	['m','m'] -> S44
	['n','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','l'], ['m','m'], ['n','z']}

S37{
	_true : 't' 'r' • 'u' 'e'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : • _true | _false
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','t'] -> S14
	['u','u'] -> S45
	['v','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','t'], ['u','u'], ['v','z']}

S38{
	charac : ''' (_alpha | _digit | ' ') ''' •
}
Transitions:
Action: Accept("charac")
Symbols classes: {}

S39{
	_digit :  '0'-'9' •
	_float : _digit {_digit} '.' _digit {_digit} •
	_float : _digit {_digit} '.' _digit {• _digit}
	number : ['-'] (_integer | _float) •
	number : ['-'] (_integer | • _float)
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S39
Action: Accept("number")
Symbols classes: {['0','9']}

S40{
	bool : 'b' 'o' 'o' • 'l'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','k'] -> S14
	['l','l'] -> S46
	['m','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','k'], ['l','l'], ['m','z']}

S41{
	char : 'c' 'h' 'a' • 'r'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','q'] -> S14
	['r','r'] -> S47
	['s','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','q'], ['r','r'], ['s','z']}

S42{
	_false : 'f' 'a' 'l' • 's' 'e'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : _true | • _false
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','r'] -> S14
	['s','s'] -> S48
	['t','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','r'], ['s','s'], ['t','z']}

S43{
	func : 'f' 'u' 'n' • 'c'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','b'] -> S14
	['c','c'] -> S49
	['d','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','b'], ['c','c'], ['d','z']}

S44{
	num : 'n' 'u' 'm' •
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("num")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S45{
	_true : 't' 'r' 'u' • 'e'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : • _true | _false
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','d'] -> S14
	['e','e'] -> S50
	['f','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','d'], ['e','e'], ['f','z']}

S46{
	bool : 'b' 'o' 'o' 'l' •
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("bool")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S47{
	char : 'c' 'h' 'a' 'r' •
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("char")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S48{
	_false : 'f' 'a' 'l' 's' • 'e'
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : _true | • _false
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','d'] -> S14
	['e','e'] -> S51
	['f','z'] -> S14
Action: Accept("id")
Symbols classes: {['0','9'], ['A','Z'], ['a','d'], ['e','e'], ['f','z']}

S49{
	func : 'f' 'u' 'n' 'c' •
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("func")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S50{
	_true : 't' 'r' 'u' 'e' •
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : (_true | _false) •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("boolean")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S51{
	_false : 'f' 'a' 'l' 's' 'e' •
	_alpha : ( 'a'-'z' |  'A'-'Z') •
	boolean : (_true | _false) •
	_id : _alpha {(_digit | _alpha)} •
	_id : _alpha {(_digit | • _alpha)}
	_id : _alpha {(• _digit | _alpha)}
	id : _id •
	id : • _id
	_alpha :  'a'-'z' | •  'A'-'Z'
	_alpha : •  'a'-'z' |  'A'-'Z'
	_digit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S31
	['A','Z'] -> S14
	['a','z'] -> S14
Action: Accept("boolean")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

