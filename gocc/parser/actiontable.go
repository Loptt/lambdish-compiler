// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			shift(4), // func
			nil,      // id
			nil,      // ::
			nil,      // =>
			nil,      // (
			nil,      // )
			nil,      // ,
			nil,      // empty
			nil,      // [
			nil,      // ]
			nil,      // num
			nil,      // bool
			nil,      // char
			nil,      // operations
			nil,      // relop
			nil,      // #
			nil,      // boolean
			nil,      // number
			nil,      // charac
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // func
			nil,          // id
			nil,          // ::
			nil,          // =>
			nil,          // (
			nil,          // )
			nil,          // ,
			nil,          // empty
			nil,          // [
			nil,          // ]
			nil,          // num
			nil,          // bool
			nil,          // char
			nil,          // operations
			nil,          // relop
			nil,          // #
			nil,          // boolean
			nil,          // number
			nil,          // charac
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			shift(6),  // id
			nil,       // ::
			nil,       // =>
			shift(7),  // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(8),  // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			shift(12), // operations
			shift(13), // relop
			nil,       // #
			shift(14), // boolean
			shift(15), // number
			shift(16), // charac
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(4),  // func
			reduce(3), // id, reduce: Functions
			nil,       // ::
			nil,       // =>
			reduce(3), // (, reduce: Functions
			nil,       // )
			nil,       // ,
			nil,       // empty
			reduce(3), // [, reduce: Functions
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			reduce(3), // operations, reduce: Functions
			reduce(3), // relop, reduce: Functions
			nil,       // #
			reduce(3), // boolean, reduce: Functions
			reduce(3), // number, reduce: Functions
			reduce(3), // charac, reduce: Functions
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			shift(18), // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Program
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(19), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(17), // $, reduce: Statement
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(17), // (, reduce: Statement
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			shift(20), // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(22),  // id
			nil,        // ::
			nil,        // =>
			shift(23),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(24),  // [
			reduce(27), // ], reduce: Args
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(29),  // operations
			shift(30),  // relop
			nil,        // #
			shift(31),  // boolean
			shift(32),  // number
			shift(33),  // charac
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(18), // $, reduce: Statement
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(18), // (, reduce: Statement
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(19), // $, reduce: Statement
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(19), // (, reduce: Statement
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(20), // $, reduce: Statement
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(20), // (, reduce: Statement
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(34), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(35), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(28), // $, reduce: Constant
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(28), // (, reduce: Constant
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(29), // $, reduce: Constant
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(29), // (, reduce: Constant
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(30), // $, reduce: Constant
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(30), // (, reduce: Constant
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			reduce(2), // id, reduce: Functions
			nil,       // ::
			nil,       // =>
			reduce(2), // (, reduce: Functions
			nil,       // )
			nil,       // ,
			nil,       // empty
			reduce(2), // [, reduce: Functions
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			reduce(2), // operations, reduce: Functions
			reduce(2), // relop, reduce: Functions
			nil,       // #
			reduce(2), // boolean, reduce: Functions
			reduce(2), // number, reduce: Functions
			reduce(2), // charac, reduce: Functions
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			shift(36), // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(7), // =>, reduce: Params
			shift(52), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(54), // [
			nil,       // ]
			shift(55), // num
			shift(56), // bool
			shift(57), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(58),  // (
			nil,        // )
			shift(59),  // ,
			nil,        // empty
			nil,        // [
			reduce(26), // ], reduce: Args
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(17), // (, reduce: Statement
			nil,        // )
			reduce(17), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			reduce(17), // ], reduce: Statement
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			shift(60), // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(22),  // id
			nil,        // ::
			nil,        // =>
			shift(23),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(24),  // [
			reduce(27), // ], reduce: Args
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(29),  // operations
			shift(30),  // relop
			nil,        // #
			shift(31),  // boolean
			shift(32),  // number
			shift(33),  // charac
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(18), // (, reduce: Statement
			nil,        // )
			reduce(18), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			reduce(18), // ], reduce: Statement
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(19), // (, reduce: Statement
			nil,        // )
			reduce(19), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			reduce(19), // ], reduce: Statement
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(20), // (, reduce: Statement
			nil,        // )
			reduce(20), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			reduce(20), // ], reduce: Statement
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			shift(62), // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(63), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(64), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(28), // (, reduce: Constant
			nil,        // )
			reduce(28), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			reduce(28), // ], reduce: Constant
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(29), // (, reduce: Constant
			nil,        // )
			reduce(29), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			reduce(29), // ], reduce: Constant
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(30), // (, reduce: Constant
			nil,        // )
			reduce(30), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			reduce(30), // ], reduce: Constant
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(7), // =>, reduce: Params
			shift(52), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(54), // [
			nil,       // ]
			shift(55), // num
			shift(56), // bool
			shift(57), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(68),  // (
			reduce(26), // ), reduce: Args
			shift(69),  // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(17), // (, reduce: Statement
			reduce(17), // ), reduce: Statement
			reduce(17), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			shift(70), // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(22),  // id
			nil,        // ::
			nil,        // =>
			shift(23),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(24),  // [
			reduce(27), // ], reduce: Args
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(29),  // operations
			shift(30),  // relop
			nil,        // #
			shift(31),  // boolean
			shift(32),  // number
			shift(33),  // charac
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(18), // (, reduce: Statement
			reduce(18), // ), reduce: Statement
			reduce(18), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(19), // (, reduce: Statement
			reduce(19), // ), reduce: Statement
			reduce(19), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(20), // (, reduce: Statement
			reduce(20), // ), reduce: Statement
			reduce(20), // ,, reduce: Statement
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			shift(72), // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(73), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(74), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(28), // (, reduce: Constant
			reduce(28), // ), reduce: Constant
			reduce(28), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(29), // (, reduce: Constant
			reduce(29), // ), reduce: Constant
			reduce(29), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(30), // (, reduce: Constant
			reduce(30), // ), reduce: Constant
			reduce(30), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			shift(75), // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			shift(76), // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(16), // =>, reduce: FuncTypes
			shift(78),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(81),  // [
			nil,        // ]
			shift(82),  // num
			shift(83),  // bool
			shift(84),  // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			reduce(8), // id, reduce: Type
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(86), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(88), // [
			nil,       // ]
			shift(89), // num
			shift(90), // bool
			shift(91), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			reduce(11), // id, reduce: BasicType
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			reduce(12), // id, reduce: BasicType
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			reduce(13), // id, reduce: BasicType
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(22),  // id
			nil,        // ::
			nil,        // =>
			shift(23),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(24),  // [
			reduce(27), // ], reduce: Args
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(29),  // operations
			shift(30),  // relop
			nil,        // #
			shift(31),  // boolean
			shift(32),  // number
			shift(33),  // charac
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(7), // =>, reduce: Params
			shift(52), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(54), // [
			nil,       // ]
			shift(55), // num
			shift(56), // bool
			shift(57), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			shift(95), // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(31), // $, reduce: Constant
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(31), // (, reduce: Constant
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			shift(98), // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			shift(99), // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(100), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(7), // =>, reduce: Params
			shift(52), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(54), // [
			nil,       // ]
			shift(55), // num
			shift(56), // bool
			shift(57), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			shift(104), // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(21), // $, reduce: FunctionCall
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(21), // (, reduce: FunctionCall
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(108), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(110), // [
			nil,        // ]
			shift(111), // num
			shift(112), // bool
			shift(113), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(6),  // =>, reduce: Params
			nil,        // (
			nil,        // )
			shift(114), // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(15), // =>, reduce: FuncTypes
			nil,        // (
			nil,        // )
			shift(115), // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(16), // =>, reduce: FuncTypes
			shift(78),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(81),  // [
			nil,        // ]
			shift(82),  // num
			shift(83),  // bool
			shift(84),  // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(8), // =>, reduce: Type
			nil,       // (
			nil,       // )
			reduce(8), // ,, reduce: Type
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(117), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(86), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(88), // [
			nil,       // ]
			shift(89), // num
			shift(90), // bool
			shift(91), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(11), // =>, reduce: BasicType
			nil,        // (
			nil,        // )
			reduce(11), // ,, reduce: BasicType
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(12), // =>, reduce: BasicType
			nil,        // (
			nil,        // )
			reduce(12), // ,, reduce: BasicType
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(13), // =>, reduce: BasicType
			nil,        // (
			nil,        // )
			reduce(13), // ,, reduce: BasicType
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			shift(119), // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(16), // =>, reduce: FuncTypes
			shift(78),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(81),  // [
			nil,        // ]
			shift(82),  // num
			shift(83),  // bool
			shift(84),  // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			reduce(8), // ], reduce: Type
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(86), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(88), // [
			nil,       // ]
			shift(89), // num
			shift(90), // bool
			shift(91), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			reduce(11), // ], reduce: BasicType
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			reduce(12), // ], reduce: BasicType
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			reduce(13), // ], reduce: BasicType
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(122), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			reduce(25), // ], reduce: Args
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(123), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(31), // (, reduce: Constant
			nil,        // )
			reduce(31), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			reduce(31), // ], reduce: Constant
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(124), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(125), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(22), // $, reduce: FunctionCall
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(22), // (, reduce: FunctionCall
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(23), // $, reduce: FunctionCall
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(23), // (, reduce: FunctionCall
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(108), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(110), // [
			nil,        // ]
			shift(111), // num
			shift(112), // bool
			shift(113), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(127), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			reduce(25), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(128), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(31), // (, reduce: Constant
			reduce(31), // ), reduce: Constant
			reduce(31), // ,, reduce: Constant
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(129), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(130), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(131), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(16), // =>, reduce: FuncTypes
			shift(78),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(81),  // [
			nil,        // ]
			shift(82),  // num
			shift(83),  // bool
			shift(84),  // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			reduce(8), // (, reduce: Type
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(86), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(88), // [
			nil,       // ]
			shift(89), // num
			shift(90), // bool
			shift(91), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(11), // (, reduce: BasicType
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(12), // (, reduce: BasicType
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(13), // (, reduce: BasicType
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(7), // =>, reduce: Params
			shift(52), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(54), // [
			nil,       // ]
			shift(55), // num
			shift(56), // bool
			shift(57), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(16), // =>, reduce: FuncTypes
			shift(78),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(81),  // [
			nil,        // ]
			shift(82),  // num
			shift(83),  // bool
			shift(84),  // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(136), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(138), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(140), // [
			nil,        // ]
			shift(141), // num
			shift(142), // bool
			shift(143), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			shift(144), // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			reduce(10), // id, reduce: Type
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(145), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			shift(146), // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(21), // (, reduce: FunctionCall
			nil,        // )
			reduce(21), // ,, reduce: FunctionCall
			nil,        // empty
			nil,        // [
			reduce(21), // ], reduce: FunctionCall
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(108), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(110), // [
			nil,        // ]
			shift(111), // num
			shift(112), // bool
			shift(113), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(22), // (, reduce: FunctionCall
			nil,        // )
			reduce(22), // ,, reduce: FunctionCall
			nil,        // empty
			nil,        // [
			reduce(22), // ], reduce: FunctionCall
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(23), // (, reduce: FunctionCall
			nil,        // )
			reduce(23), // ,, reduce: FunctionCall
			nil,        // empty
			nil,        // [
			reduce(23), // ], reduce: FunctionCall
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(148), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(21), // (, reduce: FunctionCall
			reduce(21), // ), reduce: FunctionCall
			reduce(21), // ,, reduce: FunctionCall
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(108), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(110), // [
			nil,        // ]
			shift(111), // num
			shift(112), // bool
			shift(113), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(22), // (, reduce: FunctionCall
			reduce(22), // ), reduce: FunctionCall
			reduce(22), // ,, reduce: FunctionCall
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(23), // (, reduce: FunctionCall
			reduce(23), // ), reduce: FunctionCall
			reduce(23), // ,, reduce: FunctionCall
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(151), // id
			nil,        // ::
			nil,        // =>
			shift(152), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(153), // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(157), // operations
			shift(158), // relop
			nil,        // #
			shift(159), // boolean
			shift(160), // number
			shift(161), // charac
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(162), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			shift(163), // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(5), // =>, reduce: Params
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(14), // =>, reduce: FuncTypes
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(138), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(140), // [
			nil,        // ]
			shift(141), // num
			shift(142), // bool
			shift(143), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(165), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(16), // =>, reduce: FuncTypes
			shift(78),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(81),  // [
			nil,        // ]
			shift(82),  // num
			shift(83),  // bool
			shift(84),  // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			reduce(8), // ), reduce: Type
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			shift(86), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(88), // [
			nil,       // ]
			shift(89), // num
			shift(90), // bool
			shift(91), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			reduce(11), // ), reduce: BasicType
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			reduce(12), // ), reduce: BasicType
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			reduce(13), // ), reduce: BasicType
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			reduce(10), // =>, reduce: Type
			nil,        // (
			nil,        // )
			reduce(10), // ,, reduce: Type
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(138), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(140), // [
			nil,        // ]
			shift(141), // num
			shift(142), // bool
			shift(143), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			reduce(10), // ], reduce: Type
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(169), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(151), // id
			nil,        // ::
			nil,        // =>
			shift(152), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(153), // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(157), // operations
			shift(158), // relop
			nil,        // #
			shift(159), // boolean
			shift(160), // number
			shift(161), // charac
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(171), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(172), // (
			shift(173), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(17), // (, reduce: Statement
			reduce(17), // ), reduce: Statement
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			shift(174), // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(22),  // id
			nil,        // ::
			nil,        // =>
			shift(23),  // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(24),  // [
			reduce(27), // ], reduce: Args
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(29),  // operations
			shift(30),  // relop
			nil,        // #
			shift(31),  // boolean
			shift(32),  // number
			shift(33),  // charac
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(18), // (, reduce: Statement
			reduce(18), // ), reduce: Statement
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(19), // (, reduce: Statement
			reduce(19), // ), reduce: Statement
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(20), // (, reduce: Statement
			reduce(20), // ), reduce: Statement
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(176), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(177), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(28), // (, reduce: Constant
			reduce(28), // ), reduce: Constant
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(29), // (, reduce: Constant
			reduce(29), // ), reduce: Constant
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(30), // (, reduce: Constant
			reduce(30), // ), reduce: Constant
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(138), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(140), // [
			nil,        // ]
			shift(141), // num
			shift(142), // bool
			shift(143), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(10), // (, reduce: Type
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(179), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			reduce(9), // id, reduce: Type
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(180), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			shift(181), // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(182), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(151), // id
			nil,        // ::
			nil,        // =>
			shift(152), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(153), // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(157), // operations
			shift(158), // relop
			nil,        // #
			shift(159), // boolean
			shift(160), // number
			shift(161), // charac
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(172), // (
			shift(184), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(151), // id
			nil,        // ::
			nil,        // =>
			shift(152), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(153), // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(157), // operations
			shift(158), // relop
			nil,        // #
			shift(159), // boolean
			shift(160), // number
			shift(161), // charac
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(187), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(7), // =>, reduce: Params
			shift(52), // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			shift(54), // [
			nil,       // ]
			shift(55), // num
			shift(56), // bool
			shift(57), // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			shift(189), // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(38),  // id
			nil,        // ::
			nil,        // =>
			shift(39),  // (
			reduce(27), // ), reduce: Args
			nil,        // ,
			nil,        // empty
			shift(40),  // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(45),  // operations
			shift(46),  // relop
			nil,        // #
			shift(47),  // boolean
			shift(48),  // number
			shift(49),  // charac
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(192), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			reduce(9), // =>, reduce: Type
			nil,       // (
			nil,       // )
			reduce(9), // ,, reduce: Type
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(138), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(140), // [
			nil,        // ]
			shift(141), // num
			shift(142), // bool
			shift(143), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			reduce(10), // ), reduce: Type
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			reduce(9), // ], reduce: Type
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(172), // (
			shift(194), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(4), // func, reduce: Function
			reduce(4), // id, reduce: Function
			nil,       // ::
			nil,       // =>
			reduce(4), // (, reduce: Function
			nil,       // )
			nil,       // ,
			nil,       // empty
			reduce(4), // [, reduce: Function
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			reduce(4), // operations, reduce: Function
			reduce(4), // relop, reduce: Function
			nil,       // #
			reduce(4), // boolean, reduce: Function
			reduce(4), // number, reduce: Function
			reduce(4), // charac, reduce: Function
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(172), // (
			shift(195), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(196), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(24), // $, reduce: Lambda
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(24), // (, reduce: Lambda
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			shift(197), // =>
			nil,        // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(31), // (, reduce: Constant
			reduce(31), // ), reduce: Constant
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(198), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(199), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			reduce(9), // (, reduce: Type
			nil,       // )
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(200), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(201), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(202), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(21), // (, reduce: FunctionCall
			reduce(21), // ), reduce: FunctionCall
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(108), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(110), // [
			nil,        // ]
			shift(111), // num
			shift(112), // bool
			shift(113), // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(22), // (, reduce: FunctionCall
			reduce(22), // ), reduce: FunctionCall
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(23), // (, reduce: FunctionCall
			reduce(23), // ), reduce: FunctionCall
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // func
			nil,       // id
			nil,       // ::
			nil,       // =>
			nil,       // (
			reduce(9), // ), reduce: Type
			nil,       // ,
			nil,       // empty
			nil,       // [
			nil,       // ]
			nil,       // num
			nil,       // bool
			nil,       // char
			nil,       // operations
			nil,       // relop
			nil,       // #
			nil,       // boolean
			nil,       // number
			nil,       // charac
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(24), // (, reduce: Lambda
			nil,        // )
			reduce(24), // ,, reduce: Lambda
			nil,        // empty
			nil,        // [
			reduce(24), // ], reduce: Lambda
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(24), // (, reduce: Lambda
			reduce(24), // ), reduce: Lambda
			reduce(24), // ,, reduce: Lambda
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(204), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			shift(151), // id
			nil,        // ::
			nil,        // =>
			shift(152), // (
			nil,        // )
			nil,        // ,
			nil,        // empty
			shift(153), // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			shift(157), // operations
			shift(158), // relop
			nil,        // #
			shift(159), // boolean
			shift(160), // number
			shift(161), // charac
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			shift(172), // (
			shift(206), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			nil,        // (
			shift(207), // )
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // func
			nil,        // id
			nil,        // ::
			nil,        // =>
			reduce(24), // (, reduce: Lambda
			reduce(24), // ), reduce: Lambda
			nil,        // ,
			nil,        // empty
			nil,        // [
			nil,        // ]
			nil,        // num
			nil,        // bool
			nil,        // char
			nil,        // operations
			nil,        // relop
			nil,        // #
			nil,        // boolean
			nil,        // number
			nil,        // charac
		},
	},
}
